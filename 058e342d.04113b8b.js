(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{129:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=n.a.createContext({}),p=function(e){var t=n.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},O=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,i=b(e,["components","mdxType","originalType","parentName"]),u=p(a),O=r,m=u["".concat(c,".").concat(O)]||u[O]||s[O]||o;return a?n.a.createElement(m,l(l({ref:t},i),{},{components:a})):n.a.createElement(m,l({ref:t},i))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,c=new Array(o);c[0]=O;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var i=2;i<o;i++)c[i]=a[i];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"},72:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return b})),a.d(t,"default",(function(){return p}));var r=a(3),n=a(7),o=(a(0),a(129)),c={title:"202 Variable"},l={unversionedId:"ai/Docker-PyTorch-Tutorial/202_variable",id:"ai/Docker-PyTorch-Tutorial/202_variable",isDocsHomePage:!1,title:"202 Variable",description:"View more, visit my tutorial page//mofanpy.com/tutorials/",source:"@site/docs/ai/Docker-PyTorch-Tutorial/202_variable.md",slug:"/ai/Docker-PyTorch-Tutorial/202_variable",permalink:"/docs/ai/Docker-PyTorch-Tutorial/202_variable",version:"current",sidebar:"AI",previous:{title:"201 Torch and Numpy",permalink:"/docs/ai/Docker-PyTorch-Tutorial/201_torch_numpy"},next:{title:"203 Activation",permalink:"/docs/ai/Docker-PyTorch-Tutorial/203_activation"}},b=[],i={toc:b};function p(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"View more, visit my tutorial page: ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://mofanpy.com/tutorials/"}),"https://mofanpy.com/tutorials/"),"\nMy Youtube Channel: ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.youtube.com/user/MorvanZhou"}),"https://www.youtube.com/user/MorvanZhou")),Object(o.b)("p",null,"Dependencies:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"torch: 0.1.11")),Object(o.b)("p",null,"Variable in torch is to build a computational graph,\nbut this graph is dynamic compared with a static graph in Tensorflow or Theano.\nSo torch does not have placeholder, torch can just pass variable to the computational graph."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"import torch\nfrom torch.autograd import Variable\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"tensor = torch.FloatTensor([[1,2],[3,4]])            # build a tensor\nvariable = Variable(tensor, requires_grad=True)      # build a variable, usually for compute gradients\n\nprint(tensor)       # [torch.FloatTensor of size 2x2]\nprint(variable)     # [torch.FloatTensor of size 2x2]\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{})," 1  2\n 3  4\n[torch.FloatTensor of size 2x2]\n\nVariable containing:\n 1  2\n 3  4\n[torch.FloatTensor of size 2x2]\n")),Object(o.b)("p",null,"Till now the tensor and variable seem the same."),Object(o.b)("p",null,"However, the variable is a part of the graph, it's a part of the auto-gradient."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"t_out = torch.mean(tensor*tensor)       # x^2\nv_out = torch.mean(variable*variable)   # x^2\nprint(t_out)\nprint(v_out)\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"7.5\nVariable containing:\n 7.5000\n[torch.FloatTensor of size 1]\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"v_out.backward()    # backpropagation from v_out\n")),Object(o.b)("p",null,"$$ v_{out} = {{1} \\over {4}} sum(variable^2) $$"),Object(o.b)("p",null,"the gradients w.r.t the variable, "),Object(o.b)("p",null,"$$ {d(v_{out}) \\over d(variable)} = {{1} \\over {4}} 2 variable = {variable \\over 2}$$"),Object(o.b)("p",null,"let's check the result pytorch calculated for us below:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"variable.grad\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"Variable containing:\n 0.5000  1.0000\n 1.5000  2.0000\n[torch.FloatTensor of size 2x2]\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"variable # this is data in variable format\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"Variable containing:\n 1  2\n 3  4\n[torch.FloatTensor of size 2x2]\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"variable.data # this is data in tensor format\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{})," 1  2\n 3  4\n[torch.FloatTensor of size 2x2]\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"variable.data.numpy() # numpy format\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"array([[ 1.,  2.],\n       [ 3.,  4.]], dtype=float32)\n")),Object(o.b)("p",null,"Note that we did ",Object(o.b)("inlineCode",{parentName:"p"},".backward()")," on ",Object(o.b)("inlineCode",{parentName:"p"},"v_out")," but ",Object(o.b)("inlineCode",{parentName:"p"},"variable")," has been assigned new values on it's ",Object(o.b)("inlineCode",{parentName:"p"},"grad"),"."),Object(o.b)("p",null,"As this line "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"v_out = torch.mean(variable*variable)\n")),Object(o.b)("p",null,"will make a new variable ",Object(o.b)("inlineCode",{parentName:"p"},"v_out")," and connect it with ",Object(o.b)("inlineCode",{parentName:"p"},"variable")," in computation graph."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"type(v_out)\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"torch.autograd.variable.Variable\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"type(v_out.data)\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{}),"torch.FloatTensor\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-python"}),"")))}p.isMDXComponent=!0}}]);