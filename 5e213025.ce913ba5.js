(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{127:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,f=u["".concat(o,".").concat(d)]||u[d]||b[d]||c;return n?r.a.createElement(f,i(i({ref:t},l),{},{components:n})):r.a.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<c;l++)o[l]=n[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},190:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_2_0-b5dcef27037846c6eef5dbc220ccb884.png"},191:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_0-2acec48a9c15a8929b8ec659d099d686.png"},192:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_1-42ea7f809999742b5a0359ca0b8a0791.png"},193:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_2-f4e75ab3844f912c71e614cac4d0e3e4.png"},194:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_3-cef33de747f75b7159fdfc81a2ad2f3f.png"},195:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_4-68cdadc88c4ce8a8994df94c8aa7f50f.png"},196:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_5-d014880fe62c20bc6b385a65fc651642.png"},197:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_6-9b91852d9a21bd91fb816d62b71bf4d5.png"},198:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_7-5baa3218a488010da9ec4d47facde812.png"},199:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_8-5baa3218a488010da9ec4d47facde812.png"},200:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_9-5baa3218a488010da9ec4d47facde812.png"},201:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_10-0b1b4de44010caad3e8e9df24223367c.png"},202:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/302_classification_6_11-0b1b4de44010caad3e8e9df24223367c.png"},89:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),c=(n(0),n(127)),o={title:"302 Classification"},i={unversionedId:"ai/Docker-PyTorch-Tutorial/302_classification",id:"ai/Docker-PyTorch-Tutorial/302_classification",isDocsHomePage:!1,title:"302 Classification",description:"View more, visit my tutorial page//mofanpy.com/tutorials/",source:"@site/docs/ai/Docker-PyTorch-Tutorial/302_classification.md",slug:"/ai/Docker-PyTorch-Tutorial/302_classification",permalink:"/docs/ai/Docker-PyTorch-Tutorial/302_classification",version:"current",sidebar:"AI",previous:{title:"301 Regression",permalink:"/docs/ai/Docker-PyTorch-Tutorial/301_regression"},next:{title:"303 Build NN Quickly",permalink:"/docs/ai/Docker-PyTorch-Tutorial/303_build_nn_quickly"}},s=[],l={toc:s};function p(e){var t=e.components,o=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,o,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"View more, visit my tutorial page: ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://mofanpy.com/tutorials/"}),"https://mofanpy.com/tutorials/"),"\nMy Youtube Channel: ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.youtube.com/user/MorvanZhou"}),"https://www.youtube.com/user/MorvanZhou")),Object(c.b)("p",null,"Dependencies:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"torch: 0.1.11"),Object(c.b)("li",{parentName:"ul"},"matplotlib")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"import torch\nfrom torch.autograd import Variable\nimport torch.nn.functional as F\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\ntorch.manual_seed(1)    # reproducible\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"<torch._C.Generator at 0x10725f2a0>\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"# make fake data\nn_data = torch.ones(100, 2)\nx0 = torch.normal(2*n_data, 1)      # class0 x data (tensor), shape=(100, 2)\ny0 = torch.zeros(100)               # class0 y data (tensor), shape=(100, 1)\nx1 = torch.normal(-2*n_data, 1)     # class1 x data (tensor), shape=(100, 2)\ny1 = torch.ones(100)                # class1 y data (tensor), shape=(100, 1)\nx = torch.cat((x0, x1), 0).type(torch.FloatTensor)  # shape (200, 2) FloatTensor = 32-bit floating\ny = torch.cat((y0, y1), ).type(torch.LongTensor)    # shape (200,) LongTensor = 64-bit integer\n\n# torch can only train on Variable, so convert them to Variable\nx, y = Variable(x), Variable(y)\n\nplt.scatter(x.data.numpy()[:, 0], x.data.numpy()[:, 1], c=y.data.numpy(), s=100, lw=0, cmap='RdYlGn')\nplt.show()\n")),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(190).default})),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"class Net(torch.nn.Module):\n    def __init__(self, n_feature, n_hidden, n_output):\n        super(Net, self).__init__()\n        self.hidden = torch.nn.Linear(n_feature, n_hidden)   # hidden layer\n        self.out = torch.nn.Linear(n_hidden, n_output)   # output layer\n\n    def forward(self, x):\n        x = F.relu(self.hidden(x))      # activation function for hidden layer\n        x = self.out(x)\n        return x\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"net = Net(n_feature=2, n_hidden=10, n_output=2)     # define the network\nprint(net)  # net architecture\n\n# Loss and Optimizer\n# Softmax is internally computed.\n# Set parameters to be updated.\noptimizer = torch.optim.SGD(net.parameters(), lr=0.02)\nloss_func = torch.nn.CrossEntropyLoss()  # the target label is NOT an one-hotted\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"Net (\n  (hidden): Linear (2 -> 10)\n  (out): Linear (10 -> 2)\n)\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"plt.ion()   # something about plotting\n")),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"for t in range(100):\n    out = net(x)                 # input x and predict based on x\n    loss = loss_func(out, y)     # must be (1. nn output, 2. target), the target label is NOT one-hotted\n\n    optimizer.zero_grad()   # clear gradients for next train\n    loss.backward()         # backpropagation, compute gradients\n    optimizer.step()        # apply gradients\n    \n    if t % 10 == 0 or t in [3, 6]:\n        # plot and show learning process\n        plt.cla()\n        _, prediction = torch.max(F.softmax(out), 1)\n        pred_y = prediction.data.numpy().squeeze()\n        target_y = y.data.numpy()\n        plt.scatter(x.data.numpy()[:, 0], x.data.numpy()[:, 1], c=pred_y, s=100, lw=0, cmap='RdYlGn')\n        accuracy = sum(pred_y == target_y)/200.\n        plt.text(1.5, -4, 'Accuracy=%.2f' % accuracy, fontdict={'size': 20, 'color':  'red'})\n        plt.show()\n        plt.pause(0.1)\n\nplt.ioff()\n")),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(191).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(192).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(193).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(194).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(195).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(196).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(197).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(198).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(199).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(200).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(201).default})),Object(c.b)("p",null,Object(c.b)("img",{alt:"png",src:n(202).default})),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),"")))}p.isMDXComponent=!0}}]);